# https://linked.data.gov.au/def/agop
RewriteRule ^/def/agop/spec$			               https://raw.githack.com/AGLDWG/agop/master/specification.html [R=302,L]
RewriteCond %{QUERY_STRING} ^_format=text/turtle$ [OR]
RewriteCond %{HTTP:Accept} text/turtle [NC]
RewriteRule ^/def/agop$                                https://raw.githack.com/AGLDWG/agop/master/agop.ttl? [R=302,L]
RewriteRule ^/def/agop.ttl$                            https://raw.githack.com/AGLDWG/agop/master/agop.ttl [R=302,L]
RewriteRule ^/def/agop$                                https://raw.githack.com/AGLDWG/agop/master/agop.html [R=302,L]
RewriteRule ^/def/agop/validator$		               https://raw.githack.com/AGLDWG/agop/master/validator.shacl.ttl [R=302,L]
RewriteRule ^/def/agop/example.valid-1$                https://raw.githack.com/AGLDWG/agop/master/example.valid-1.ttl [R=302,L]
RewriteRule ^/def/agop/example.valid-2$                https://raw.githack.com/AGLDWG/agop/master/example.valid-2.ttl [R=302,L]
RewriteRule ^/def/agop/example.invalid-1$              https://raw.githack.com/AGLDWG/agop/master/example.invalid-1.ttl [R=302,L]
RewriteRule ^/def/agop/example.invalid-2$              https://raw.githack.com/AGLDWG/agop/master/example.invalid-2.ttl [R=302,L]


# https://linked.data.gov.au/def/dataset
# all requests for RDF (turtle) just go to the whole borehole.ttl doc
# Use of "($|/.*)" essenttial, as there is also /def/dataset-relationships elsewhere.
RewriteCond %{QUERY_STRING} ^_format=text/turtle$ [OR]
RewriteCond %{HTTP:Accept} text/turtle [NC]
RewriteRule ^/def/dataset($|/.*)                        https://raw.githack.com/AGLDWG/dataset-ont/master/dataset.ttl? [R=302,L]
RewriteRule ^/def/dataset(|/.*).ttl$                    https://raw.githack.com/AGLDWG/dataset-ont/master/dataset.ttl [R=302,L]
RewriteRule ^/def/dataset($|(/.*))                      https://raw.githack.com/AGLDWG/dataset-ont/master/dataset.html$2 [R=302,L]


# https://linked.data.gov.au/def/datatype
RewriteCond %{QUERY_STRING} ^_format=text/turtle$ [OR]
RewriteCond %{HTTP:Accept} text/turtle [NC]
RewriteRule ^/def/datatype(.*)$                         https://raw.githack.com/AGLDWG/datatype-ont/master/rdf/datatype.ttl? [R=302,L]
RewriteRule ^/def/datatype(.*).ttl$                     https://raw.githack.com/AGLDWG/datatype-ont/master/rdf/datatype.ttl [R=302,L]
RewriteRule ^/def/datatype(.*)$                         https://raw.githack.com/AGLDWG/datatype-ont/master/html/datatype.html$1 [R=302,L]


# https://linked.data.gov.au/def/cn
RewriteCond %{QUERY_STRING} _mediatype=text/turtle
### Temporarily comment out header setting; as is, it applies to _every_ request! Need to make it properly conditional.
### Header set Content-Type text/turtle
RewriteRule ^/def/cn($|/(.*))                           https://raw.githubusercontent.com/AGLDWG/compound-naming-model/main/model.ttl [R=302,L]
### Temporarily comment out header setting; as is, it applies to _every_ request! Need to make it properly conditional.
### Header set Content-Type text/turtle
RewriteRule ^/def/cn.ttl                                https://raw.githubusercontent.com/AGLDWG/compound-naming-model/main/model.ttl [R=302,L]
RewriteRule ^/def/cn($|/(.*))                           https://agldwg.github.io/compound-naming-model/model.html [R=302,L]


# https://linked.data.gov.au/def/gnaf
RewriteCond %{QUERY_STRING} ^_format=text/turtle$ [OR]
RewriteCond %{HTTP:Accept} text/turtle [NC]
RewriteRule ^/def/gnaf(.*)$                             https://agldwg.github.io/gnaf-ont/gnaf.ttl? [R=302,L]
RewriteRule ^/def/gnaf(.*).ttl$                         https://agldwg.github.io/gnaf-ont/gnaf.ttl [R=302,L]
RewriteRule ^/def/gnaf(.*)$                             https://agldwg.github.io/gnaf-ont/gnaf.html$1 [R=302,L]


# https://linked.data.gov.au/def/irg
RewriteCond %{QUERY_STRING} ^_format=text/turtle$ [OR]
RewriteCond %{HTTP:Accept} text/turtle [NC]
RewriteRule ^/def/irg(.*)$                              https://raw.githack.com/AGLDWG/iri-registry-ont/master/irg.ttl? [R=302,L]
RewriteRule ^/def/irg(.*).ttl$                          https://raw.githack.com/AGLDWG/iri-registry-ont/master/irg.ttl$1 [R=302,L]
RewriteRule ^/def/irg(.*)$                              https://raw.githack.com/AGLDWG/iri-registry-ont/master/irg.html$1 [R=302,L]


# https://linked.data.gov.au/def/iso19160-1-address-nz-profile
RewriteCond %{QUERY_STRING} ^_format=text/turtle$ [OR]
RewriteCond %{HTTP:Accept} text/turtle [NC]
RewriteRule ^/def/iso19160-1-address-nz-profile(.*)$      https://raw.githack.com/AGLDWG/iso19160-1-address-ont-nz-profile/master/iso19160-1-nz-profile.ttl? [R=302,L]
RewriteRule ^/def/iso19160-1-address-nz-profile(.*).ttl$  https://raw.githack.com/AGLDWG/iso19160-1-address-ont-nz-profile/master/iso19160-1-nz-profile.ttl [R=302,L]
RewriteRule ^/def/iso19160-1-address-nz-profile(.*)$      https://raw.githack.com/AGLDWG/iso19160-1-address-ont-nz-profile/master/iso19160-1-nz-profile.html$1 [R=302,L]


# https://linked.data.gov.au/def/iso19160-1-address
RewriteCond %{QUERY_STRING} ^_format=text/turtle$ [OR]
RewriteCond %{HTTP:Accept} text/turtle [NC]
RewriteRule ^/def/iso19160-1-address(.*)$                 https://raw.githack.com/AGLDWG/iso19160-1-address-ont/master/iso19160-1.ttl? [R=302,L]
RewriteRule ^/def/iso19160-1-address(.*).ttl$             https://raw.githack.com/AGLDWG/iso19160-1-address-ont/master/iso19160-1.ttl [R=302,L]
RewriteRule ^/def/iso19160-1-address/Address/code/(.*)$   https://raw.githack.com/AGLDWG/iso19160-1-address-ont/master/codelist.ttl? [R=302,L]
RewriteRule ^/def/iso19160-1-address(.*)$                 https://raw.githack.com/AGLDWG/iso19160-1-address-ont/master/iso19160-1.html$1 [R=302,L]


# https://linked.data.gov.au/def/lifecycle
RewriteCond %{QUERY_STRING} ^_format=text/turtle$ [OR]
RewriteCond %{HTTP:Accept} text/turtle [NC]
### Temporarily comment out header setting; as is, it applies to _every_ request! Need to make it properly conditional.
### Header set Content-Type text/turtle
RewriteRule ^/def/lifecycle(.*)$                 https://agldwg.github.io/lifecycle-model/lifecycle.ttl? [R=302,L]
### Temporarily comment out header setting; as is, it applies to _every_ request! Need to make it properly conditional.
### Header set Content-Type text/turtle
RewriteRule ^/def/lifecycle(.*).ttl$             https://agldwg.github.io/lifecycle-model/lifecycle.ttl [R=302,L]
RewriteRule ^/def/lifecycle(.*)$                 https://agldwg.github.io/lifecycle-model/lifecycle.html$1 [R=302,L]


# https://linked.data.gov.au/def/prof-roles
RewriteCond %{QUERY_STRING} ^_mediatype=text/turtle$ [OR]
RewriteCond %{HTTP:Accept} text/turtle [NC]
RewriteRule ^/def/prof-roles$                            https://agldwg.github.io/prof-roles/.ttl [R=302,L]
RewriteRule ^/def/prof-roles.ttl$                        https://agldwg.github.io/prof-roles/.ttl [R=302,L]
RewriteRule ^/def/prof-roles$                            https://agldwg.github.io/prof-roles/ [R=302,L]
RewriteCond %{QUERY_STRING} ^_mediatype=text/turtle$ [OR]
RewriteCond %{HTTP:Accept} text/turtle [NC]
RewriteRule ^/def/prof-roles/(.+)$                       https://agldwg.github.io/prof-roles/$1.ttl [R=302,L]
RewriteRule ^/def/prof-roles/(.+).ttl$                   https://agldwg.github.io/prof-roles/$1.ttl [R=302,L]
RewriteRule ^/def/prof-roles/(.+)$                       https://agldwg.github.io/prof-roles/$1 [R=302,L]


# https://linked.data.gov.au/def/reg-roles
RewriteCond %{QUERY_STRING} ^_mediatype=text/turtle$ [OR]
RewriteCond %{HTTP:Accept} text/turtle [NC]
RewriteRule ^/def/reg-roles$                            https://agldwg.github.io/reg-roles/.ttl [R=302,L]
RewriteRule ^/def/reg-roles.ttl$                        https://agldwg.github.io/reg-roles/.ttl [R=302,L]
RewriteRule ^/def/reg-roles$                            https://agldwg.github.io/reg-roles/ [R=302,L]
RewriteCond %{QUERY_STRING} ^_mediatype=text/turtle$ [OR]
RewriteCond %{HTTP:Accept} text/turtle [NC]
RewriteRule ^/def/reg-roles/(.+)$                       https://agldwg.github.io/reg-roles/$1.ttl [R=302,L]
RewriteRule ^/def/reg-roles/(.+).ttl$                   https://agldwg.github.io/reg-roles/$1.ttl [R=302,L]
RewriteRule ^/def/reg-roles/(.+)$                       https://agldwg.github.io/reg-roles/$1 [R=302,L]


# https://linked.data.gov.au/def/reg-statuses
RewriteCond %{QUERY_STRING} ^_mediatype=text/turtle$ [OR]
RewriteCond %{HTTP:Accept} text/turtle [NC]
RewriteRule ^/def/reg-statuses$                         https://agldwg.github.io/reg-statuses/vocabulary.ttl [R=302,L]
RewriteRule ^/def/reg-statuses.ttl$                     https://agldwg.github.io/reg-statuses/vocabulary.ttl [R=302,L]
RewriteRule ^/def/reg-statuses$                         https://agldwg.github.io/reg-statuses/ [R=302,L]
RewriteCond %{QUERY_STRING} ^_mediatype=text/turtle$ [OR]
RewriteCond %{HTTP:Accept} text/turtle [NC]
RewriteRule ^/def/reg-statuses/(.+)$                    https://agldwg.github.io/reg-statuses/$1.ttl [R=302,L]
RewriteRule ^/def/reg-statuses/(.+).ttl$                https://agldwg.github.io/reg-statuses/$1.ttl [R=302,L]
RewriteRule ^/def/reg-statuses/(.+)$                    https://agldwg.github.io/reg-statuses/$1 [R=302,L]


# https://linked.data.gov.au/def/supermodel
RewriteRule ^/def/supermodel$                           https://nicholascar.com/supermodel/ [R=303,L]
RewriteCond %{QUERY_STRING} ^_mediatype=text/turtle$ [OR]
RewriteCond %{HTTP:Accept} text/turtle [NC]
RewriteRule ^/def/supermodel/terms(.*)$                 https://agldwg.github.io/supermodel-terms-vocab$1 [R=302,L]
RewriteRule ^/def/supermodel/terms(.*)$                 https://agldwg.github.io/supermodel-terms-vocab$1 [R=302,NE,L]


# https://linked.data.gov.au/def/vocdermods
RewriteCond %{QUERY_STRING} ^_mediatype=text/turtle$ [OR]
RewriteCond %{HTTP:Accept} text/turtle [NC]
RewriteRule ^/def/vocdermods$                            https://agldwg.github.io/vocab-derivation-modes/.ttl [R=302,L]
RewriteRule ^/def/vocdermods.ttl$                        https://agldwg.github.io/vocab-derivation-modes/.ttl [R=302,L]
RewriteRule ^/def/vocdermods$                            https://agldwg.github.io/vocab-derivation-modes/ [R=302,L]
RewriteCond %{QUERY_STRING} ^_mediatype=text/turtle$ [OR]
RewriteCond %{HTTP:Accept} text/turtle [NC]
RewriteRule ^/def/vocdermods/(.+)$                       https://agldwg.github.io/vocab-derivation-modes/$1.ttl [R=302,L]
RewriteRule ^/def/vocdermods/(.+).ttl$                   https://agldwg.github.io/vocab-derivation-modes/$1.ttl [R=302,L]
RewriteRule ^/def/vocdermods/(.+)$                       https://agldwg.github.io/vocab-derivation-modes/$1 [R=302,L]
